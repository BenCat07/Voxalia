#version 430 core

layout (binding = 0) uniform sampler2D godraytex;

layout (location = 0) in vec2 f_texcoord;

layout (location = 6) in float w;

out vec4 color;

/*
// The vector spam below is generated with this simple distribution code, as opposed to anything sane, such as live-generating it:
            StringBuilder sb = new StringBuilder();
            int i = 1;
            int t = 0;
            for (float f = -0.3f; f < 0.3f; f += 0.04f)
            {
                for (float g = -0.3f; g < 0.3f; g += 0.04f)
                {
                    float a = f;
                    float b = g;
                    float c = (float)Math.Sqrt(a * a + b * b);
                    sb.Append("vec3(").Append(a).Append(", ").Append(b).Append(", ").Append(c).Append("),");
                    if (i++ >= 5)
                    {
                        sb.Append("\n");
                        i = 1;
                    }
                    else
                    {
                        sb.Append(" ");
                    }
                    t++;
                }
            }
            File.WriteAllText("test.txt", t + "\n" + sb.ToString());
*/

const int OFF_COUNT = 256;

const vec3[] offsets = vec3[](
vec3(-0.3, -0.3, 0.4242641), vec3(-0.3, -0.26, 0.3969887), vec3(-0.3, -0.22, 0.3720215), vec3(-0.3, -0.18, 0.3498571), vec3(-0.3, -0.14, 0.3310589),
vec3(-0.3, -0.1, 0.3162278), vec3(-0.3, -0.06000005, 0.3059412), vec3(-0.3, -0.02000005, 0.3006659), vec3(-0.3, 0.01999995, 0.3006659), vec3(-0.3, 0.05999995, 0.3059412),
vec3(-0.3, 0.09999995, 0.3162278), vec3(-0.3, 0.14, 0.3310589), vec3(-0.3, 0.1799999, 0.3498571), vec3(-0.3, 0.2199999, 0.3720215), vec3(-0.3, 0.2599999, 0.3969886),
vec3(-0.3, 0.2999999, 0.424264), vec3(-0.26, -0.3, 0.3969887), vec3(-0.26, -0.26, 0.3676956), vec3(-0.26, -0.22, 0.3405878), vec3(-0.26, -0.18, 0.3162278),
vec3(-0.26, -0.14, 0.2952965), vec3(-0.26, -0.1, 0.2785678), vec3(-0.26, -0.06000005, 0.2668333), vec3(-0.26, -0.02000005, 0.2607681), vec3(-0.26, 0.01999995, 0.2607681),
vec3(-0.26, 0.05999995, 0.2668333), vec3(-0.26, 0.09999995, 0.2785678), vec3(-0.26, 0.14, 0.2952965), vec3(-0.26, 0.1799999, 0.3162278), vec3(-0.26, 0.2199999, 0.3405877),
vec3(-0.26, 0.2599999, 0.3676955), vec3(-0.26, 0.2999999, 0.3969886), vec3(-0.22, -0.3, 0.3720215), vec3(-0.22, -0.26, 0.3405878), vec3(-0.22, -0.22, 0.311127),
vec3(-0.22, -0.18, 0.2842534), vec3(-0.22, -0.14, 0.2607681), vec3(-0.22, -0.1, 0.241661), vec3(-0.22, -0.06000005, 0.2280351), vec3(-0.22, -0.02000005, 0.2209073),
vec3(-0.22, 0.01999995, 0.2209072), vec3(-0.22, 0.05999995, 0.2280351), vec3(-0.22, 0.09999995, 0.2416609), vec3(-0.22, 0.14, 0.2607681), vec3(-0.22, 0.1799999, 0.2842534),
vec3(-0.22, 0.2199999, 0.3111269), vec3(-0.22, 0.2599999, 0.3405877), vec3(-0.22, 0.2999999, 0.3720214), vec3(-0.18, -0.3, 0.3498571), vec3(-0.18, -0.26, 0.3162278),
vec3(-0.18, -0.22, 0.2842534), vec3(-0.18, -0.18, 0.2545585), vec3(-0.18, -0.14, 0.2280351), vec3(-0.18, -0.1, 0.2059126), vec3(-0.18, -0.06000005, 0.1897367),
vec3(-0.18, -0.02000005, 0.1811077), vec3(-0.18, 0.01999995, 0.1811077), vec3(-0.18, 0.05999995, 0.1897367), vec3(-0.18, 0.09999995, 0.2059126), vec3(-0.18, 0.14, 0.2280351),
vec3(-0.18, 0.1799999, 0.2545584), vec3(-0.18, 0.2199999, 0.2842534), vec3(-0.18, 0.2599999, 0.3162277), vec3(-0.18, 0.2999999, 0.3498571), vec3(-0.14, -0.3, 0.3310589),
vec3(-0.14, -0.26, 0.2952965), vec3(-0.14, -0.22, 0.2607681), vec3(-0.14, -0.18, 0.2280351), vec3(-0.14, -0.14, 0.19799), vec3(-0.14, -0.1, 0.1720466),
vec3(-0.14, -0.06000005, 0.1523155), vec3(-0.14, -0.02000005, 0.1414214), vec3(-0.14, 0.01999995, 0.1414214), vec3(-0.14, 0.05999995, 0.1523155), vec3(-0.14, 0.09999995, 0.1720465),
vec3(-0.14, 0.14, 0.1979899), vec3(-0.14, 0.1799999, 0.2280351), vec3(-0.14, 0.2199999, 0.2607681), vec3(-0.14, 0.2599999, 0.2952964), vec3(-0.14, 0.2999999, 0.3310589),
vec3(-0.1, -0.3, 0.3162278), vec3(-0.1, -0.26, 0.2785678), vec3(-0.1, -0.22, 0.241661), vec3(-0.1, -0.18, 0.2059126), vec3(-0.1, -0.14, 0.1720466),
vec3(-0.1, -0.1, 0.1414214), vec3(-0.1, -0.06000005, 0.1166191), vec3(-0.1, -0.02000005, 0.1019804), vec3(-0.1, 0.01999995, 0.1019804), vec3(-0.1, 0.05999995, 0.1166191),
vec3(-0.1, 0.09999995, 0.1414213), vec3(-0.1, 0.14, 0.1720465), vec3(-0.1, 0.1799999, 0.2059126), vec3(-0.1, 0.2199999, 0.2416609), vec3(-0.1, 0.2599999, 0.2785677),
vec3(-0.1, 0.2999999, 0.3162277), vec3(-0.06000005, -0.3, 0.3059412), vec3(-0.06000005, -0.26, 0.2668333), vec3(-0.06000005, -0.22, 0.2280351), vec3(-0.06000005, -0.18, 0.1897367),
vec3(-0.06000005, -0.14, 0.1523155), vec3(-0.06000005, -0.1, 0.1166191), vec3(-0.06000005, -0.06000005, 0.08485288), vec3(-0.06000005, -0.02000005, 0.06324562), vec3(-0.06000005, 0.01999995, 0.06324559),
vec3(-0.06000005, 0.05999995, 0.08485281), vec3(-0.06000005, 0.09999995, 0.116619), vec3(-0.06000005, 0.14, 0.1523154), vec3(-0.06000005, 0.1799999, 0.1897366), vec3(-0.06000005, 0.2199999, 0.228035),
vec3(-0.06000005, 0.2599999, 0.2668332), vec3(-0.06000005, 0.2999999, 0.3059411), vec3(-0.02000005, -0.3, 0.3006659), vec3(-0.02000005, -0.26, 0.2607681), vec3(-0.02000005, -0.22, 0.2209073),
vec3(-0.02000005, -0.18, 0.1811077), vec3(-0.02000005, -0.14, 0.1414214), vec3(-0.02000005, -0.1, 0.1019804), vec3(-0.02000005, -0.06000005, 0.06324562), vec3(-0.02000005, -0.02000005, 0.02828434),
vec3(-0.02000005, 0.01999995, 0.02828427), vec3(-0.02000005, 0.05999995, 0.06324552), vec3(-0.02000005, 0.09999995, 0.1019804), vec3(-0.02000005, 0.14, 0.1414213), vec3(-0.02000005, 0.1799999, 0.1811077),
vec3(-0.02000005, 0.2199999, 0.2209072), vec3(-0.02000005, 0.2599999, 0.260768), vec3(-0.02000005, 0.2999999, 0.3006659), vec3(0.01999995, -0.3, 0.3006659), vec3(0.01999995, -0.26, 0.2607681),
vec3(0.01999995, -0.22, 0.2209072), vec3(0.01999995, -0.18, 0.1811077), vec3(0.01999995, -0.14, 0.1414214), vec3(0.01999995, -0.1, 0.1019804), vec3(0.01999995, -0.06000005, 0.06324559),
vec3(0.01999995, -0.02000005, 0.02828427), vec3(0.01999995, 0.01999995, 0.0282842), vec3(0.01999995, 0.05999995, 0.06324549), vec3(0.01999995, 0.09999995, 0.1019803), vec3(0.01999995, 0.14, 0.1414213),
vec3(0.01999995, 0.1799999, 0.1811077), vec3(0.01999995, 0.2199999, 0.2209072), vec3(0.01999995, 0.2599999, 0.260768), vec3(0.01999995, 0.2999999, 0.3006659), vec3(0.05999995, -0.3, 0.3059412),
vec3(0.05999995, -0.26, 0.2668333), vec3(0.05999995, -0.22, 0.2280351), vec3(0.05999995, -0.18, 0.1897367), vec3(0.05999995, -0.14, 0.1523155), vec3(0.05999995, -0.1, 0.1166191),
vec3(0.05999995, -0.06000005, 0.08485281), vec3(0.05999995, -0.02000005, 0.06324552), vec3(0.05999995, 0.01999995, 0.06324549), vec3(0.05999995, 0.05999995, 0.08485275), vec3(0.05999995, 0.09999995, 0.116619),
vec3(0.05999995, 0.14, 0.1523154), vec3(0.05999995, 0.1799999, 0.1897366), vec3(0.05999995, 0.2199999, 0.228035), vec3(0.05999995, 0.2599999, 0.2668332), vec3(0.05999995, 0.2999999, 0.3059411),
vec3(0.09999995, -0.3, 0.3162278), vec3(0.09999995, -0.26, 0.2785678), vec3(0.09999995, -0.22, 0.2416609), vec3(0.09999995, -0.18, 0.2059126), vec3(0.09999995, -0.14, 0.1720465),
vec3(0.09999995, -0.1, 0.1414213), vec3(0.09999995, -0.06000005, 0.116619), vec3(0.09999995, -0.02000005, 0.1019804), vec3(0.09999995, 0.01999995, 0.1019803), vec3(0.09999995, 0.05999995, 0.116619),
vec3(0.09999995, 0.09999995, 0.1414213), vec3(0.09999995, 0.14, 0.1720464), vec3(0.09999995, 0.1799999, 0.2059125), vec3(0.09999995, 0.2199999, 0.2416608), vec3(0.09999995, 0.2599999, 0.2785677),
vec3(0.09999995, 0.2999999, 0.3162277), vec3(0.14, -0.3, 0.3310589), vec3(0.14, -0.26, 0.2952965), vec3(0.14, -0.22, 0.2607681), vec3(0.14, -0.18, 0.2280351),
vec3(0.14, -0.14, 0.1979899), vec3(0.14, -0.1, 0.1720465), vec3(0.14, -0.06000005, 0.1523154), vec3(0.14, -0.02000005, 0.1414213), vec3(0.14, 0.01999995, 0.1414213),
vec3(0.14, 0.05999995, 0.1523154), vec3(0.14, 0.09999995, 0.1720464), vec3(0.14, 0.14, 0.1979898), vec3(0.14, 0.1799999, 0.228035), vec3(0.14, 0.2199999, 0.260768),
vec3(0.14, 0.2599999, 0.2952964), vec3(0.14, 0.2999999, 0.3310588), vec3(0.1799999, -0.3, 0.3498571), vec3(0.1799999, -0.26, 0.3162278), vec3(0.1799999, -0.22, 0.2842534),
vec3(0.1799999, -0.18, 0.2545584), vec3(0.1799999, -0.14, 0.2280351), vec3(0.1799999, -0.1, 0.2059126), vec3(0.1799999, -0.06000005, 0.1897366), vec3(0.1799999, -0.02000005, 0.1811077),
vec3(0.1799999, 0.01999995, 0.1811077), vec3(0.1799999, 0.05999995, 0.1897366), vec3(0.1799999, 0.09999995, 0.2059125), vec3(0.1799999, 0.14, 0.228035), vec3(0.1799999, 0.1799999, 0.2545584),
vec3(0.1799999, 0.2199999, 0.2842533), vec3(0.1799999, 0.2599999, 0.3162277), vec3(0.1799999, 0.2999999, 0.349857), vec3(0.2199999, -0.3, 0.3720215), vec3(0.2199999, -0.26, 0.3405877),
vec3(0.2199999, -0.22, 0.3111269), vec3(0.2199999, -0.18, 0.2842534), vec3(0.2199999, -0.14, 0.2607681), vec3(0.2199999, -0.1, 0.2416609), vec3(0.2199999, -0.06000005, 0.228035),
vec3(0.2199999, -0.02000005, 0.2209072), vec3(0.2199999, 0.01999995, 0.2209072), vec3(0.2199999, 0.05999995, 0.228035), vec3(0.2199999, 0.09999995, 0.2416608), vec3(0.2199999, 0.14, 0.260768),
vec3(0.2199999, 0.1799999, 0.2842533), vec3(0.2199999, 0.2199999, 0.3111269), vec3(0.2199999, 0.2599999, 0.3405876), vec3(0.2199999, 0.2999999, 0.3720214), vec3(0.2599999, -0.3, 0.3969886),
vec3(0.2599999, -0.26, 0.3676955), vec3(0.2599999, -0.22, 0.3405877), vec3(0.2599999, -0.18, 0.3162277), vec3(0.2599999, -0.14, 0.2952964), vec3(0.2599999, -0.1, 0.2785677),
vec3(0.2599999, -0.06000005, 0.2668332), vec3(0.2599999, -0.02000005, 0.260768), vec3(0.2599999, 0.01999995, 0.260768), vec3(0.2599999, 0.05999995, 0.2668332), vec3(0.2599999, 0.09999995, 0.2785677),
vec3(0.2599999, 0.14, 0.2952964), vec3(0.2599999, 0.1799999, 0.3162277), vec3(0.2599999, 0.2199999, 0.3405876), vec3(0.2599999, 0.2599999, 0.3676955), vec3(0.2599999, 0.2999999, 0.3969886),
vec3(0.2999999, -0.3, 0.424264), vec3(0.2999999, -0.26, 0.3969886), vec3(0.2999999, -0.22, 0.3720214), vec3(0.2999999, -0.18, 0.3498571), vec3(0.2999999, -0.14, 0.3310589),
vec3(0.2999999, -0.1, 0.3162277), vec3(0.2999999, -0.06000005, 0.3059411), vec3(0.2999999, -0.02000005, 0.3006659), vec3(0.2999999, 0.01999995, 0.3006659), vec3(0.2999999, 0.05999995, 0.3059411),
vec3(0.2999999, 0.09999995, 0.3162277), vec3(0.2999999, 0.14, 0.3310588), vec3(0.2999999, 0.1799999, 0.349857), vec3(0.2999999, 0.2199999, 0.3720214), vec3(0.2999999, 0.2599999, 0.3969886),
vec3(0.2999999, 0.2999999, 0.424264)
);

const float MAX_M = 1.0 / 0.6929647;

void main()
{
	vec4 grinp = vec4(0.0);
	for (int i = 0; i < OFF_COUNT; i++)
	{
		vec2 off = offsets[i].xy;
		vec4 col = texture(godraytex, f_texcoord + off);
		if (col.a > 0.0)
		{
			float mod = (1.0 - (offsets[i].z * MAX_M));
			grinp += col * mod * mod;
		}
	}
	color = grinp;
	//color = vec4(texture(godraytex, f_texcoord).xyz, 1.0);
}
